import { NgxActionCableConfiguration } from './ngx-action-cable-configuration';
import { NgxActionCableBroadcaster } from './ngx-action-cable-broadcaster';
import * as i0 from "@angular/core";
export declare class NgxActionCableService {
    readonly configuration: NgxActionCableConfiguration;
    cables: Map<string, any>;
    channels: {};
    constructor(configuration: NgxActionCableConfiguration);
    subscribe(key: string, channel: any, params?: {}): NgxActionCableBroadcaster;
    unsubscribe(key: string, channel: string, params?: {}): void;
    perform(channel: string, params: {}, action: string, data: any): void;
    connect(key: any, url: string): any;
    disconnect(key: string): void;
    private getChannelName;
    private getCabel;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxActionCableService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NgxActionCableService>;
}
